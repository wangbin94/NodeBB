"use strict";

var User = module.parent.require('./user'),
    db = module.parent.require('../src/database'),
    meta = module.parent.require('./meta'),
    winston = module.parent.require('winston'),
    passport = module.parent.require('passport'),
    fs = module.parent.require('fs'),
    path = module.parent.require('path'),
    translator = module.parent.require('../public/src/translator');

var request = require('request');
var apiKey, appId;

var ParsePush = {
    admin: {}
};

ParsePush.init = function(app, middleware, controllers) {
    function render(req, res, next) {
        res.render('admin/plugins/parse_push', {});
    }

    app.get('/admin/plugins/parse_push', middleware.admin.buildHeader, render);
    app.get('/api/admin/plugins/parse_push', render);

    meta.settings.get('parse_push', function(err, settings) {
        if (!err && settings && settings.apiKey && settings.appId) {
            appId = settings.appId;
            apiKey = settings.apiKey;
        } else {
            winston.error('[plugins/parse] API key not set!');
        }
    });
};

ParsePush.postSaved = function(data) {
//    console.log('post saved:');
};

ParsePush.notification = {
    pushed: function(data) {
//        console.log('pushed data:');
//        console.log(data);

        translator.translate(data.bodyShort, meta.config.defaultLang || 'en_GB', function(translated) {
            translated = translated.replace('<strong>', '').replace('</strong>', '');
            translated = translated.replace('<strong>', '').replace('</strong>', '');
//            console.log(translated);

            request.post({
                url: 'https://api.parse.com/1/push',
                headers: {
                    "X-Parse-Application-Id": appId,
                    "X-Parse-REST-API-Key": apiKey,
                    "Content-Type": "application/json"
                },
                json: {
                    "channels": [
                        "userid_"+data.uid
                    ],
                    "data": {
                        "alert": translated
                    }
                }
            }, function (error, response, body) {
                if (!error && response.statusCode == 200) {
//                    console.log(body)
                }
                else {
//                    console.log(error);
//                    console.log(response);
                }
            });
        });
    }
};

ParsePush.admin = {
    menu: function(custom_header, callback) {
        custom_header.plugins.push({
            "route": '/plugins/parse_push',
            "icon": 'fa-envelope-o',
            "name": 'Parse Push'
        });

        callback(null, custom_header);
    }
};
module.exports = ParsePush;